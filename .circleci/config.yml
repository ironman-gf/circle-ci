version: 2.1

jobs:
  build:
    docker:
      - image: maven:3.6.3-jdk-8
    working_directory: /app

    steps:
      - checkout

      - run:
          name: Install dependencies
          command: mvn clean install

      - store_artifacts:
          path: target/*.jar

  build_docker_image:
    docker:
      - image: docker:20.10.2
    working_directory: /app

    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-docker-{{ .Branch }}-{{ .Revision }}
            - v1-docker-{{ .Branch }}
            - v1-docker
      - run:
          name: Build Docker Image
          command: |
            docker build -t my-java-image .
      - save_cache:
          key: v1-docker-{{ .Branch }}-{{ .Revision }}
          paths:
            - /root/.docker
      - store_artifacts:
          path: my-java-app
      # - run:
      #     name: Deploy to Google Cloud Platform
      #     command: |
      #       echo $GCLOUD_SERVICE_KEY | base64 --decode > ${HOME}/gcloud-service-key.json
      #       gcloud auth activate-service-account --key-file ${HOME}/gcloud-service-key.json
      #       gcloud --quiet config set project $GCP_PROJECT_ID
      #       gcloud --quiet config set container/use_client_certificate True
      #       gcloud --quiet config set compute/zone $GCP_COMPUTE_ZONE
      #       gcloud --quiet container clusters get-credentials $GCP_CLUSTER_NAME
      #       kubectl config use-context gke_$GCP_PROJECT_ID_$GCP_COMPUTE_ZONE_$GCP_CLUSTER_NAME
      #       kubectl set image deployment/$GCP_DEPLOYMENT_NAME $GCP_CONTAINER_NAME=$DOCKER_USERNAME/my-java-image:$CIRCLE_SHA1
workflows:
  mvn-docker-build-workflow:
    jobs:
      - build
      - build_docker_image:
          requires:
            - build